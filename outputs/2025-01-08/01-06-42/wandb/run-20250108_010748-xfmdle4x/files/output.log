LOCAL_RANK: 0 - CUDA_VISIBLE_DEVICES: [0]

  | Name                   | Type                         | Params | Mode
--------------------------------------------------------------------------------
0 | sparse_encoder         | SparseContextEncoder         | 231 K  | train
1 | mamba_layer            | MambaLayer                   | 330 K  | train
2 | high_level_model       | HighLevelInteractionModel    | 1.2 M  | train
3 | lane_probability_model | LaneAwareProbabilityLearning | 347 K  | train
4 | laplace_decoder        | MultimodalLaplaceDecoder     | 516    | train
--------------------------------------------------------------------------------
2.1 M     Trainable params
0         Non-trainable params
2.1 M     Total params
8.515     Total estimated model params size (MB)
90        Modules in train mode
0         Modules in eval mode
Sanity Checking DataLoader 0:   0%|                                                                                                                                                                       | 0/2 [00:00<?, ?it/s]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
Sanity Checking DataLoader 0:  50%|███████████████████████████████████████████████████████████████████████████████▌                                                                               | 1/2 [00:00<00:00,  7.47it/s]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
Epoch 0:   0%|                                                                                                                                                                                           | 0/43 [00:00<?, ?it/s]Sparse features shape: torch.Size([16, 15, 128])
/home/user/anaconda3/envs/im_jg/lib/python3.9/site-packages/pytorch_lightning/loops/fit_loop.py:310: The number of training batches (43) is smaller than the logging interval Trainer(log_every_n_steps=50). Set a lower value for log_every_n_steps if you want to see logs for the training epoch.
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:   2%|███▉                                                                                                                                                                   | 1/43 [00:00<00:19,  2.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:   5%|███████▊                                                                                                                                                               | 2/43 [00:00<00:10,  4.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:   7%|███████████▋                                                                                                                                                           | 3/43 [00:00<00:06,  5.80it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:00<00:05,  7.35it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:00<00:04,  8.82it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:00<00:03, 10.18it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:00<00:03, 11.45it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:00<00:02, 12.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:00<00:02, 13.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:00<00:02, 14.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:00<00:02, 15.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:00<00:01, 16.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:00<00:01, 17.30it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:00<00:01, 18.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:00<00:01, 18.80it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:00<00:01, 19.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:00<00:01, 20.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:00<00:01, 20.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:00<00:01, 21.37it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:00<00:01, 22.03it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:00<00:00, 22.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:00<00:00, 23.25it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:00<00:00, 23.83it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:00<00:00, 24.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:01<00:00, 24.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:01<00:00, 25.22it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:01<00:00, 25.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:01<00:00, 26.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:01<00:00, 26.39it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:01<00:00, 26.74it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:01<00:00, 27.07it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:01<00:00, 27.39it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:01<00:00, 27.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:01<00:00, 28.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:01<00:00, 28.31it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:01<00:00, 28.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:01<00:00, 28.90it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:01<00:00, 29.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:01<00:00, 29.43it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:01<00:00, 29.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:01<00:00, 29.94it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 0:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:01<00:00, 30.18it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 0: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:01<00:00, 30.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 77.92it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 83.03it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 85.87it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 82.68it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 85.83it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 87.85it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 89.40it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 89.80it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 90.03it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 90.23it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 1:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:03,  0.66it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:31,  1.30it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:20,  1.93it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:15,  2.54it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:09,  3.71it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.33it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.84it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.33it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.82it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.19it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  9.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02,  9.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.29it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:02, 10.67it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 11.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:02<00:01, 11.42it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:02<00:01, 11.79it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 12.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 12.82it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 13.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.47it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 13.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 14.10it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.40it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 14.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 14.99it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 15.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 15.57it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 15.85it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 16.13it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 16.40it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 16.67it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 16.93it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 1:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 17.19it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 1: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 17.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 75.96it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 80.71it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 82.99it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 79.92it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 83.00it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 85.28it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 86.99it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 87.45it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 88.04it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 88.29it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 2:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:03,  0.66it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:31,  1.30it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:20,  1.92it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:15,  2.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.10it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:10,  3.67it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.22it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.66it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.10it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.53it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  8.95it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.36it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02,  9.76it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:02, 10.53it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:02<00:01, 10.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:02<00:01, 11.26it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:02<00:01, 11.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 11.95it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.29it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 12.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 12.94it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.25it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 13.56it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 13.86it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 14.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 14.73it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 15.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 15.30it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 15.58it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 15.85it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 16.12it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 16.38it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 16.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 2:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 16.89it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 2: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 17.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 76.21it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 80.97it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 83.21it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 80.16it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 83.16it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 85.44it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 87.18it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 87.62it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 87.81it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 88.23it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 3:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<00:54,  0.77it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:27,  1.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:17,  2.24it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:13,  2.93it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:10,  3.60it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:08,  4.24it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:07,  4.87it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:06,  5.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:05,  6.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:04,  6.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:04,  7.17it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  7.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:03,  8.20it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  8.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  9.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:02,  9.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02, 10.09it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02, 10.53it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02, 10.97it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 11.38it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:01, 11.79it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 12.19it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:01<00:01, 12.57it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:01<00:01, 12.95it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:01<00:01, 13.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:01<00:01, 13.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:01<00:01, 14.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:01<00:01, 14.40it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:01<00:00, 14.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:01<00:00, 15.09it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 15.42it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 15.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 16.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 16.37it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 16.68it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 16.95it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 17.24it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 17.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 17.80it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 18.07it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 18.34it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 3:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 18.60it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 3: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 18.86it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 66.45it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 69.40it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 72.72it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 73.27it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 77.23it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 80.14it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 82.08it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 83.12it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 83.90it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 84.47it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 4:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:05,  0.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:32,  1.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:21,  1.88it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:15,  2.47it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:10,  3.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.20it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.83it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  9.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02, 10.08it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:02, 10.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 11.29it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:01<00:01, 11.68it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:01<00:01, 12.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 12.43it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.79it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 13.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 13.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.83it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 14.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 14.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 15.12it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 15.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 15.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 16.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 16.35it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 16.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 16.94it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 17.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 17.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 4:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 17.78it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 4: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 18.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 87.43it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 93.68it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 92.06it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 93.56it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 94.61it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 95.82it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 95.02it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 94.58it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 94.21it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 94.48it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 5:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:04,  0.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:32,  1.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:21,  1.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:15,  2.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:10,  3.62it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.17it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.22it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.73it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.68it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.14it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.59it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.03it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.45it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  8.87it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02,  9.68it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:02<00:02, 10.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:02<00:01, 10.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:02<00:01, 11.17it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:02<00:01, 11.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 11.85it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.18it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 12.50it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 12.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.13it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 13.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 13.74it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.04it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 14.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 14.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 14.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 15.17it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 15.43it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 15.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 15.97it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 16.23it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 16.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 5:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 16.73it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 5: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 16.98it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 72.22it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 77.48it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 79.41it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 77.98it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 81.58it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 84.69it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 86.65it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 87.30it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 87.93it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 88.34it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 6:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:05,  0.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:32,  1.26it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:21,  1.86it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:16,  2.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.00it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:10,  3.55it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.09it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.12it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.09it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.56it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.46it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  7.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  8.73it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.13it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02,  9.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:02<00:02,  9.91it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:02<00:02, 10.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:02<00:01, 10.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:02<00:01, 11.00it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:02<00:01, 11.35it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 11.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 12.34it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 12.66it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 12.97it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 13.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 13.57it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 13.86it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 14.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 14.44it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 14.73it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 15.01it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 15.29it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 15.56it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 15.83it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 16.08it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 16.34it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 6:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 16.59it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 6: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 16.84it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 76.42it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 75.96it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 78.74it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 76.56it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 80.42it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 82.96it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 84.83it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 86.07it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 86.51it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 86.77it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 7:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<00:59,  0.71it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:29,  1.39it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:19,  2.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:14,  2.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:11,  3.32it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:09,  3.93it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:07,  4.51it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:06,  5.08it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  6.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:04,  6.68it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  7.18it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:03,  7.67it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  8.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:02,  9.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  9.50it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.92it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02, 10.33it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.74it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:01, 11.13it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 11.52it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:01<00:01, 11.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:01<00:01, 12.25it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:01<00:01, 12.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.96it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 13.30it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 13.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.95it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 14.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 14.58it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.89it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 15.18it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 15.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 15.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 16.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 16.35it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 16.63it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 16.90it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 17.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 17.43it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 7:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 17.69it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 7: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 17.94it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 77.08it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 79.00it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 84.71it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 80.97it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 84.57it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 86.83it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 88.62it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 89.01it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 89.33it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 89.54it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 8:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<01:05,  0.64it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:32,  1.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:21,  1.88it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:15,  2.47it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:12,  3.05it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:10,  3.62it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:08,  4.18it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:07,  4.72it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:06,  5.25it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  5.77it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:05,  6.28it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  6.78it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:04,  7.27it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  7.74it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  8.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:03,  8.67it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02,  9.12it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02,  9.55it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02,  9.98it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:02, 10.40it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:02, 10.81it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 11.22it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:01<00:01, 11.62it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:01<00:01, 12.00it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:02<00:01, 12.38it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:02<00:01, 12.76it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:02<00:01, 13.13it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:02<00:01, 13.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:02<00:01, 13.84it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:02<00:00, 14.19it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:02<00:00, 14.53it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:02<00:00, 14.85it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 15.16it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 15.47it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 15.77it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 16.06it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 16.36it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 16.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 16.94it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 17.21it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 17.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 8:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 17.75it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 8: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 18.00it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 75.55it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 76.19it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 82.29it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 79.77it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 81.60it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 83.46it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 85.36it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 85.76it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 86.33it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 86.54it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 9:   0%|                                                                                                                                                                               | 0/43 [00:00<?, ?it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                                                  
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:   2%|███▉                                                                                                                                                                   | 1/43 [00:01<00:55,  0.76it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:   5%|███████▊                                                                                                                                                               | 2/43 [00:01<00:27,  1.49it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:   7%|███████████▋                                                                                                                                                           | 3/43 [00:01<00:18,  2.20it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:   9%|███████████████▌                                                                                                                                                       | 4/43 [00:01<00:13,  2.88it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  12%|███████████████████▍                                                                                                                                                   | 5/43 [00:01<00:10,  3.54it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  14%|███████████████████████▎                                                                                                                                               | 6/43 [00:01<00:08,  4.19it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  16%|███████████████████████████▏                                                                                                                                           | 7/43 [00:01<00:07,  4.82it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  19%|███████████████████████████████                                                                                                                                        | 8/43 [00:01<00:06,  5.43it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  21%|██████████████████████████████████▉                                                                                                                                    | 9/43 [00:01<00:05,  6.02it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  23%|██████████████████████████████████████▌                                                                                                                               | 10/43 [00:01<00:05,  6.59it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  26%|██████████████████████████████████████████▍                                                                                                                           | 11/43 [00:01<00:04,  7.15it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  28%|██████████████████████████████████████████████▎                                                                                                                       | 12/43 [00:01<00:04,  7.69it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  30%|██████████████████████████████████████████████████▏                                                                                                                   | 13/43 [00:01<00:03,  8.22it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  33%|██████████████████████████████████████████████████████                                                                                                                | 14/43 [00:01<00:03,  8.73it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  35%|█████████████████████████████████████████████████████████▉                                                                                                            | 15/43 [00:01<00:03,  9.23it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  37%|█████████████████████████████████████████████████████████████▊                                                                                                        | 16/43 [00:01<00:02,  9.72it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  40%|█████████████████████████████████████████████████████████████████▋                                                                                                    | 17/43 [00:01<00:02, 10.19it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  42%|█████████████████████████████████████████████████████████████████████▍                                                                                                | 18/43 [00:01<00:02, 10.65it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  44%|█████████████████████████████████████████████████████████████████████████▎                                                                                            | 19/43 [00:01<00:02, 11.11it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  47%|█████████████████████████████████████████████████████████████████████████████▏                                                                                        | 20/43 [00:01<00:01, 11.54it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  49%|█████████████████████████████████████████████████████████████████████████████████                                                                                     | 21/43 [00:01<00:01, 11.97it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  51%|████████████████████████████████████████████████████████████████████████████████████▉                                                                                 | 22/43 [00:01<00:01, 12.39it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  53%|████████████████████████████████████████████████████████████████████████████████████████▊                                                                             | 23/43 [00:01<00:01, 12.80it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  56%|████████████████████████████████████████████████████████████████████████████████████████████▋                                                                         | 24/43 [00:01<00:01, 13.20it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  58%|████████████████████████████████████████████████████████████████████████████████████████████████▌                                                                     | 25/43 [00:01<00:01, 13.59it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  60%|████████████████████████████████████████████████████████████████████████████████████████████████████▎                                                                 | 26/43 [00:01<00:01, 13.97it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  63%|████████████████████████████████████████████████████████████████████████████████████████████████████████▏                                                             | 27/43 [00:01<00:01, 14.34it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  65%|████████████████████████████████████████████████████████████████████████████████████████████████████████████                                                          | 28/43 [00:01<00:01, 14.71it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  67%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                                                      | 29/43 [00:01<00:00, 15.07it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  70%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                                                  | 30/43 [00:01<00:00, 15.42it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  72%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                                              | 31/43 [00:01<00:00, 15.76it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  74%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌                                          | 32/43 [00:01<00:00, 16.10it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  77%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍                                      | 33/43 [00:02<00:00, 16.42it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  79%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                                  | 34/43 [00:02<00:00, 16.75it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  81%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████                               | 35/43 [00:02<00:00, 17.08it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  84%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▉                           | 36/43 [00:02<00:00, 17.38it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  86%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▊                       | 37/43 [00:02<00:00, 17.70it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  88%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▋                   | 38/43 [00:02<00:00, 18.01it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  91%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▌               | 39/43 [00:02<00:00, 18.31it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  93%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▍           | 40/43 [00:02<00:00, 18.61it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  95%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎       | 41/43 [00:02<00:00, 18.92it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Epoch 9:  98%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▏   | 42/43 [00:02<00:00, 19.20it/s, v_num=le4x]Sparse features shape: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Mamba features shape: torch.Size([8, 15, 128])
High-level features shape: torch.Size([8, 15, 128])
Lane features before MambaLayer: torch.Size([8, 15, 128])
Input to MambaLayer: torch.Size([8, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 0: torch.Size([8, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 1: torch.Size([8, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 2: torch.Size([8, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([8, 15, 128])
Shape after linear_in: torch.Size([8, 15, 128])
Shape after Conv1D: torch.Size([8, 128, 15])
Shape after linear_out: torch.Size([8, 15, 128])
Output shape after residual and LayerNorm: torch.Size([8, 15, 128])
Output shape after MambaBlock 3: torch.Size([8, 15, 128])
Lane features after MambaLayer: torch.Size([8, 15, 128])
Lane features after flattening: torch.Size([120, 128])
Lane features after linear_in: torch.Size([120, 128])
Lane features reshaped back: torch.Size([8, 15, 128])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane probabilities shape: torch.Size([8, 15, 6])
Mu shape: torch.Size([8, 15, 2]), B shape: torch.Size([8, 15, 2])
Lane probabilities shape: torch.Size([8, 15, 6])
Lane labels shape: torch.Size([8])
Epoch 9: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:02<00:00, 19.48it/s, v_num=le4x]Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                           | 0/11 [00:00<?, ?it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])                                                                                                                                                   | 1/11 [00:00<00:00, 86.13it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████▋                                                                                                                                     | 2/11 [00:00<00:00, 92.45it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████▍                                                                                                                      | 3/11 [00:00<00:00, 95.44it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████▎                                                                                                       | 4/11 [00:00<00:00, 91.02it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████                                                                                         | 5/11 [00:00<00:00, 92.42it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])████████████████████████████████████████████████████████████████████████▉                                                                          | 6/11 [00:00<00:00, 93.26it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])███████████████████████████████████████████████████████████████████████████████████████▋                                                           | 7/11 [00:00<00:00, 93.93it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])██████████████████████████████████████████████████████████████████████████████████████████████████████▌                                            | 8/11 [00:00<00:00, 93.78it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎                             | 9/11 [00:00<00:00, 93.28it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Mamba features shape: torch.Size([16, 15, 128])
High-level features shape: torch.Size([16, 15, 128])
Lane features before MambaLayer: torch.Size([16, 15, 128])
Input to MambaLayer: torch.Size([16, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 0: torch.Size([16, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 1: torch.Size([16, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 2: torch.Size([16, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([16, 15, 128])
Shape after linear_in: torch.Size([16, 15, 128])
Shape after Conv1D: torch.Size([16, 128, 15])
Shape after linear_out: torch.Size([16, 15, 128])
Output shape after residual and LayerNorm: torch.Size([16, 15, 128])
Output shape after MambaBlock 3: torch.Size([16, 15, 128])
Lane features after MambaLayer: torch.Size([16, 15, 128])
Lane features after flattening: torch.Size([240, 128])
Lane features after linear_in: torch.Size([240, 128])
Lane features reshaped back: torch.Size([16, 15, 128])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane probabilities shape: torch.Size([16, 15, 6])
Mu shape: torch.Size([16, 15, 2]), B shape: torch.Size([16, 15, 2])
Lane probabilities shape: torch.Size([16, 15, 6])
Lane labels shape: torch.Size([16])
Reshaped lane probabilities shape: torch.Size([240, 6])
Reshaped lane labels shape: torch.Size([240])
                                                                                                                                                                                                                                Sparse features shape: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████▎              | 10/11 [00:00<00:00, 93.14it/s]
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Mamba features shape: torch.Size([10, 15, 128])
High-level features shape: torch.Size([10, 15, 128])
Lane features before MambaLayer: torch.Size([10, 15, 128])
Input to MambaLayer: torch.Size([10, 15, 128])
Passing through MambaBlock 0
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 0: torch.Size([10, 15, 128])
Passing through MambaBlock 1
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 1: torch.Size([10, 15, 128])
Passing through MambaBlock 2
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 2: torch.Size([10, 15, 128])
Passing through MambaBlock 3
Input shape before processing: torch.Size([10, 15, 128])
Shape after linear_in: torch.Size([10, 15, 128])
Shape after Conv1D: torch.Size([10, 128, 15])
Shape after linear_out: torch.Size([10, 15, 128])
Output shape after residual and LayerNorm: torch.Size([10, 15, 128])
Output shape after MambaBlock 3: torch.Size([10, 15, 128])
Lane features after MambaLayer: torch.Size([10, 15, 128])
Lane features after flattening: torch.Size([150, 128])
Lane features after linear_in: torch.Size([150, 128])
Lane features reshaped back: torch.Size([10, 15, 128])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane probabilities shape: torch.Size([10, 15, 6])
Mu shape: torch.Size([10, 15, 2]), B shape: torch.Size([10, 15, 2])
Lane probabilities shape: torch.Size([10, 15, 6])
Lane labels shape: torch.Size([10])
Reshaped lane probabilities shape: torch.Size([150, 6])
Reshaped lane labels shape: torch.Size([150])
Epoch 9: 100%|██████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 43/43 [00:03<00:00, 11.01it/s, v_num=le4x]
                                                                                                                                                                                                                                
`Trainer.fit` stopped: `max_epochs=10` reached.
